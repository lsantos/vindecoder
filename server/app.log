Listening on localhost:8000
http://api.marketcheck.com/v1/vin/${vin_no}/specs?api_key=${api_key}
hi Request {
  _events: [Object: null prototype] {
    error: [Function: bound ],
    complete: [Function: bound ],
    pipe: [Function]
  },
  _eventsCount: 3,
  _maxListeners: undefined,
  method: 'GET',
  headers: { Accept: 'application/json', Host: 'marketcheck-prod.apigee.net' },
  callback: [Function],
  readable: true,
  writable: true,
  explicitMethod: true,
  _qs: Querystring {
    request: [Circular],
    lib: { formats: [Object], parse: [Function], stringify: [Function] },
    useQuerystring: undefined,
    parseOptions: {},
    stringifyOptions: {}
  },
  _auth: Auth {
    request: [Circular],
    hasAuth: false,
    sentAuth: false,
    bearerToken: null,
    user: null,
    pass: null
  },
  _oauth: OAuth { request: [Circular], params: null },
  _multipart: Multipart {
    request: [Circular],
    boundary: '4b236955-f800-4825-9580-77dab76e8f1f',
    chunked: false,
    body: null
  },
  _redirect: Redirect {
    request: [Circular],
    followRedirect: true,
    followRedirects: true,
    followAllRedirects: false,
    followOriginalHttpMethod: false,
    allowRedirect: [Function],
    maxRedirects: 10,
    redirects: [],
    redirectsFollowed: 0,
    removeRefererHeader: false
  },
  _tunnel: Tunnel {
    request: [Circular],
    proxyHeaderWhiteList: [
      'accept',           'accept-charset',
      'accept-encoding',  'accept-language',
      'accept-ranges',    'cache-control',
      'content-encoding', 'content-language',
      'content-location', 'content-md5',
      'content-range',    'content-type',
      'connection',       'date',
      'expect',           'max-forwards',
      'pragma',           'referer',
      'te',               'user-agent',
      'via'
    ],
    proxyHeaderExclusiveList: []
  },
  setHeader: [Function],
  hasHeader: [Function],
  getHeader: [Function],
  removeHeader: [Function],
  localAddress: undefined,
  pool: {},
  dests: [],
  __isRequestRequest: true,
  _callback: [Function],
  uri: Url {
    protocol: 'http:',
    slashes: true,
    auth: null,
    host: 'api.marketcheck.com',
    port: 80,
    hostname: 'api.marketcheck.com',
    hash: null,
    search: '?api_key=$%7Bapi_key%7D',
    query: 'api_key=$%7Bapi_key%7D',
    pathname: '/v1/vin/$%7Bvin_no%7D/specs',
    path: '/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D',
    href: 'http://api.marketcheck.com/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D'
  },
  proxy: null,
  tunnel: false,
  setHost: false,
  originalCookieHeader: undefined,
  _disableCookies: true,
  _jar: undefined,
  port: 80,
  host: 'api.marketcheck.com',
  path: '/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D',
  httpModule: {
    _connectionListener: [Function: connectionListener],
    METHODS: [
      'ACL',         'BIND',       'CHECKOUT',
      'CONNECT',     'COPY',       'DELETE',
      'GET',         'HEAD',       'LINK',
      'LOCK',        'M-SEARCH',   'MERGE',
      'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
      'MOVE',        'NOTIFY',     'OPTIONS',
      'PATCH',       'POST',       'PROPFIND',
      'PROPPATCH',   'PURGE',      'PUT',
      'REBIND',      'REPORT',     'SEARCH',
      'SOURCE',      'SUBSCRIBE',  'TRACE',
      'UNBIND',      'UNLINK',     'UNLOCK',
      'UNSUBSCRIBE'
    ],
    STATUS_CODES: {
      '100': 'Continue',
      '101': 'Switching Protocols',
      '102': 'Processing',
      '103': 'Early Hints',
      '200': 'OK',
      '201': 'Created',
      '202': 'Accepted',
      '203': 'Non-Authoritative Information',
      '204': 'No Content',
      '205': 'Reset Content',
      '206': 'Partial Content',
      '207': 'Multi-Status',
      '208': 'Already Reported',
      '226': 'IM Used',
      '300': 'Multiple Choices',
      '301': 'Moved Permanently',
      '302': 'Found',
      '303': 'See Other',
      '304': 'Not Modified',
      '305': 'Use Proxy',
      '307': 'Temporary Redirect',
      '308': 'Permanent Redirect',
      '400': 'Bad Request',
      '401': 'Unauthorized',
      '402': 'Payment Required',
      '403': 'Forbidden',
      '404': 'Not Found',
      '405': 'Method Not Allowed',
      '406': 'Not Acceptable',
      '407': 'Proxy Authentication Required',
      '408': 'Request Timeout',
      '409': 'Conflict',
      '410': 'Gone',
      '411': 'Length Required',
      '412': 'Precondition Failed',
      '413': 'Payload Too Large',
      '414': 'URI Too Long',
      '415': 'Unsupported Media Type',
      '416': 'Range Not Satisfiable',
      '417': 'Expectation Failed',
      '418': "I'm a Teapot",
      '421': 'Misdirected Request',
      '422': 'Unprocessable Entity',
      '423': 'Locked',
      '424': 'Failed Dependency',
      '425': 'Unordered Collection',
      '426': 'Upgrade Required',
      '428': 'Precondition Required',
      '429': 'Too Many Requests',
      '431': 'Request Header Fields Too Large',
      '451': 'Unavailable For Legal Reasons',
      '500': 'Internal Server Error',
      '501': 'Not Implemented',
      '502': 'Bad Gateway',
      '503': 'Service Unavailable',
      '504': 'Gateway Timeout',
      '505': 'HTTP Version Not Supported',
      '506': 'Variant Also Negotiates',
      '507': 'Insufficient Storage',
      '508': 'Loop Detected',
      '509': 'Bandwidth Limit Exceeded',
      '510': 'Not Extended',
      '511': 'Network Authentication Required'
    },
    Agent: [Function: Agent] { defaultMaxSockets: Infinity },
    ClientRequest: [Function: ClientRequest],
    IncomingMessage: [Function: IncomingMessage],
    OutgoingMessage: [Function: OutgoingMessage],
    Server: [Function: Server],
    ServerResponse: [Function: ServerResponse],
    createServer: [Function: createServer],
    get: [Function: get],
    request: [Function: request],
    maxHeaderSize: [Getter],
    globalAgent: [Getter/Setter]
  },
  agentClass: [Function: Agent] { defaultMaxSockets: Infinity },
  agent: Agent {
    _events: [Object: null prototype] { free: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    defaultPort: 80,
    protocol: 'http:',
    options: { path: null },
    requests: {},
    sockets: {},
    freeSockets: {},
    keepAliveMsecs: 1000,
    keepAlive: false,
    maxSockets: Infinity,
    maxFreeSockets: 256
  }
}
http://api.marketcheck.com/v1/vin/${vin_no}/specs?api_key=${api_key}
hi Request {
  _events: [Object: null prototype] {
    error: [Function: bound ],
    complete: [Function: bound ],
    pipe: [Function]
  },
  _eventsCount: 3,
  _maxListeners: undefined,
  method: 'GET',
  headers: { Accept: 'application/json', Host: 'marketcheck-prod.apigee.net' },
  callback: [Function],
  readable: true,
  writable: true,
  explicitMethod: true,
  _qs: Querystring {
    request: [Circular],
    lib: { formats: [Object], parse: [Function], stringify: [Function] },
    useQuerystring: undefined,
    parseOptions: {},
    stringifyOptions: {}
  },
  _auth: Auth {
    request: [Circular],
    hasAuth: false,
    sentAuth: false,
    bearerToken: null,
    user: null,
    pass: null
  },
  _oauth: OAuth { request: [Circular], params: null },
  _multipart: Multipart {
    request: [Circular],
    boundary: '3f0ae7e7-124b-4943-844d-2099001b3723',
    chunked: false,
    body: null
  },
  _redirect: Redirect {
    request: [Circular],
    followRedirect: true,
    followRedirects: true,
    followAllRedirects: false,
    followOriginalHttpMethod: false,
    allowRedirect: [Function],
    maxRedirects: 10,
    redirects: [],
    redirectsFollowed: 0,
    removeRefererHeader: false
  },
  _tunnel: Tunnel {
    request: [Circular],
    proxyHeaderWhiteList: [
      'accept',           'accept-charset',
      'accept-encoding',  'accept-language',
      'accept-ranges',    'cache-control',
      'content-encoding', 'content-language',
      'content-location', 'content-md5',
      'content-range',    'content-type',
      'connection',       'date',
      'expect',           'max-forwards',
      'pragma',           'referer',
      'te',               'user-agent',
      'via'
    ],
    proxyHeaderExclusiveList: []
  },
  setHeader: [Function],
  hasHeader: [Function],
  getHeader: [Function],
  removeHeader: [Function],
  localAddress: undefined,
  pool: {},
  dests: [],
  __isRequestRequest: true,
  _callback: [Function],
  uri: Url {
    protocol: 'http:',
    slashes: true,
    auth: null,
    host: 'api.marketcheck.com',
    port: 80,
    hostname: 'api.marketcheck.com',
    hash: null,
    search: '?api_key=$%7Bapi_key%7D',
    query: 'api_key=$%7Bapi_key%7D',
    pathname: '/v1/vin/$%7Bvin_no%7D/specs',
    path: '/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D',
    href: 'http://api.marketcheck.com/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D'
  },
  proxy: null,
  tunnel: false,
  setHost: false,
  originalCookieHeader: undefined,
  _disableCookies: true,
  _jar: undefined,
  port: 80,
  host: 'api.marketcheck.com',
  path: '/v1/vin/$%7Bvin_no%7D/specs?api_key=$%7Bapi_key%7D',
  httpModule: {
    _connectionListener: [Function: connectionListener],
    METHODS: [
      'ACL',         'BIND',       'CHECKOUT',
      'CONNECT',     'COPY',       'DELETE',
      'GET',         'HEAD',       'LINK',
      'LOCK',        'M-SEARCH',   'MERGE',
      'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
      'MOVE',        'NOTIFY',     'OPTIONS',
      'PATCH',       'POST',       'PROPFIND',
      'PROPPATCH',   'PURGE',      'PUT',
      'REBIND',      'REPORT',     'SEARCH',
      'SOURCE',      'SUBSCRIBE',  'TRACE',
      'UNBIND',      'UNLINK',     'UNLOCK',
      'UNSUBSCRIBE'
    ],
    STATUS_CODES: {
      '100': 'Continue',
      '101': 'Switching Protocols',
      '102': 'Processing',
      '103': 'Early Hints',
      '200': 'OK',
      '201': 'Created',
      '202': 'Accepted',
      '203': 'Non-Authoritative Information',
      '204': 'No Content',
      '205': 'Reset Content',
      '206': 'Partial Content',
      '207': 'Multi-Status',
      '208': 'Already Reported',
      '226': 'IM Used',
      '300': 'Multiple Choices',
      '301': 'Moved Permanently',
      '302': 'Found',
      '303': 'See Other',
      '304': 'Not Modified',
      '305': 'Use Proxy',
      '307': 'Temporary Redirect',
      '308': 'Permanent Redirect',
      '400': 'Bad Request',
      '401': 'Unauthorized',
      '402': 'Payment Required',
      '403': 'Forbidden',
      '404': 'Not Found',
      '405': 'Method Not Allowed',
      '406': 'Not Acceptable',
      '407': 'Proxy Authentication Required',
      '408': 'Request Timeout',
      '409': 'Conflict',
      '410': 'Gone',
      '411': 'Length Required',
      '412': 'Precondition Failed',
      '413': 'Payload Too Large',
      '414': 'URI Too Long',
      '415': 'Unsupported Media Type',
      '416': 'Range Not Satisfiable',
      '417': 'Expectation Failed',
      '418': "I'm a Teapot",
      '421': 'Misdirected Request',
      '422': 'Unprocessable Entity',
      '423': 'Locked',
      '424': 'Failed Dependency',
      '425': 'Unordered Collection',
      '426': 'Upgrade Required',
      '428': 'Precondition Required',
      '429': 'Too Many Requests',
      '431': 'Request Header Fields Too Large',
      '451': 'Unavailable For Legal Reasons',
      '500': 'Internal Server Error',
      '501': 'Not Implemented',
      '502': 'Bad Gateway',
      '503': 'Service Unavailable',
      '504': 'Gateway Timeout',
      '505': 'HTTP Version Not Supported',
      '506': 'Variant Also Negotiates',
      '507': 'Insufficient Storage',
      '508': 'Loop Detected',
      '509': 'Bandwidth Limit Exceeded',
      '510': 'Not Extended',
      '511': 'Network Authentication Required'
    },
    Agent: [Function: Agent] { defaultMaxSockets: Infinity },
    ClientRequest: [Function: ClientRequest],
    IncomingMessage: [Function: IncomingMessage],
    OutgoingMessage: [Function: OutgoingMessage],
    Server: [Function: Server],
    ServerResponse: [Function: ServerResponse],
    createServer: [Function: createServer],
    get: [Function: get],
    request: [Function: request],
    maxHeaderSize: [Getter],
    globalAgent: [Getter/Setter]
  },
  agentClass: [Function: Agent] { defaultMaxSockets: Infinity },
  agent: Agent {
    _events: [Object: null prototype] { free: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    defaultPort: 80,
    protocol: 'http:',
    options: { path: null },
    requests: {},
    sockets: {},
    freeSockets: {},
    keepAliveMsecs: 1000,
    keepAlive: false,
    maxSockets: Infinity,
    maxFreeSockets: 256
  }
}
